// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  widgets       Widget[]
  shopifyStores ShopifyStore[]
}

// Widget model
model Widget {
  id          String   @id @default(cuid())
  name        String
  description String?
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  shopifyStoreId String?
  shopifyStore  ShopifyStore? @relation(fields: [shopifyStoreId], references: [id])
}

// Shopify store model
model ShopifyStore {
  id        String   @id @default(cuid())
  name      String
  domain    String   @unique
  email     String
  accessToken String
  scope     String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  products ShopifyProduct[]
  orders   ShopifyOrder[]
  webhooks ShopifyWebhookEvent[]
  widgets  Widget[]
}

// Shopify product model
model ShopifyProduct {
  id          String   @id
  shopId      String
  title       String
  handle      String
  description String?
  priceMin    Float
  priceMax    Float
  currency    String
  imageUrl    String?
  imageAlt    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  shop    ShopifyStore @relation(fields: [shopId], references: [id])
  variants ShopifyProductVariant[]
}

// Shopify product variant model
model ShopifyProductVariant {
  id             String   @id
  productId      String
  title          String
  price          Float
  availableForSale Boolean

  product ShopifyProduct @relation(fields: [productId], references: [id])
}

// Shopify order model
model ShopifyOrder {
  id               String   @id
  shopId           String
  orderNumber      String
  customerId       String?
  financialStatus  String
  fulfillmentStatus String
  totalPrice       Float
  currency         String
  createdAt        DateTime

  shop ShopifyStore @relation(fields: [shopId], references: [id])
}

// Shopify webhook model
model ShopifyWebhookEvent {
  id          String   @id
  shopId      String
  topic       String
  payload     Json
  processedAt DateTime?
  createdAt   DateTime @default(now())

  shop ShopifyStore @relation(fields: [shopId], references: [id])
} 